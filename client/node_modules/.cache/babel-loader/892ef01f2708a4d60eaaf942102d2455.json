{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Desktop\\\\Bootcamp Assignments\\\\brew-notes\\\\client\\\\src\\\\components\\\\CardModal\\\\CardModal.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './CardModal.css';\n\nfunction CardModal(props) {\n  var _this = this;\n\n  console.log('props', props);\n  var card = props.card,\n      isOpen = props.isOpen,\n      show = props.show,\n      onHide = props.onHide;\n\n  if (card) {\n    var name = card.name,\n        image = card.image,\n        description = card.description,\n        instructions = card.instructions,\n        source = card.source,\n        sourceLink = card.sourceLink;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Recommended Brewing Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"bodyHead\",\n        children: card === null || card === void 0 ? void 0 : card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"bodyDesc\",\n        children: [\"(\", card === null || card === void 0 ? void 0 : card.description, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructionHead\",\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), card.instructions.map(function (instruction) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: instruction\n        }, instruction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          class: \"font-italic text-muted\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: card === null || card === void 0 ? void 0 : card.sourceLink,\n            target: \"_blank\",\n            children: [\"Source: \", card === null || card === void 0 ? void 0 : card.source]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CardModal;\nexport default CardModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardModal\");","map":{"version":3,"sources":["C:/Users/natha/Desktop/Bootcamp Assignments/brew-notes/client/src/components/CardModal/CardModal.js"],"names":["React","useEffect","useState","Modal","Button","CardModal","props","console","log","card","isOpen","show","onHide","name","image","description","instructions","source","sourceLink","map","instruction","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport './CardModal.css';\n\nfunction CardModal(props) {\n  console.log('props', props);\n\n  const { card, isOpen, show, onHide } = props;\n\n  if(card) {\n    const {\n      name: name,\n      image: image,\n      description: description,\n      instructions: instructions,\n      source: source,\n      sourceLink: sourceLink\n    } = card;\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Recommended Brewing Recipe\n        </Modal.Title>\n      </Modal.Header>\n      {isOpen ?\n      <Modal.Body className='body'>\n        <h4 className='bodyHead'>{card?.name}</h4>\n        <h6 className='bodyDesc'>({card?.description})</h6>\n        <hr></hr>\n        <p className='instructionHead'>Instructions:</p>\n        {card.instructions.map(instruction => (\n          <p key={instruction.id}>\n            {instruction}\n          </p>\n        ))}\n        <br></br>\n        <p>\n          <small class=\"font-italic text-muted\">\n            <a href={card?.sourceLink} target='_blank'>\n              Source: {card?.source}\n            </a>\n          </small>\n        </p>\n      </Modal.Body>\n      : null}\n      <Modal.Footer>\n        <Button onClick={onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default CardModal;"]},"metadata":{},"sourceType":"module"}